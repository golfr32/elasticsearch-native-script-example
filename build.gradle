/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        mavenCentral()
        maven {
            name 'sonatype-snapshots'
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        jcenter()
    }
    dependencies {
        classpath "org.elasticsearch.gradle:build-tools:5.5.1"
    }
}


apply plugin: 'elasticsearch.esplugin'
apply plugin: 'idea'
apply plugin: 'eclipse'

// Version of the plugin
version = '5.5.1.0'

esplugin {
    description 'ElasticSearch Plugin with Native Script Examples.'
    classname 'org.elasticsearch.examples.nativescript.plugin.NativeScriptExamplesPlugin'
    name 'native-script-example'
}

dependencies {
    // Not really used at the moment - just to show how to include dependencies
    compile "org.apache.commons:commons-math3:3.5"
}

integTestCluster {
    // This is an example on how to pass settings to the cluster that is used to run integration tests
    setting 'my_scripts.prime.default_field_name', 'my_number'
}

tasks.withType(JavaCompile) {
    // Try to turn them all off automatically
    options.compilerArgs << '-Xlint:none'
    options.compilerArgs << '-nowarn' // same as '-Xlint:none'

    // Turn them off manually
    options.compilerArgs << '-Xlint:-auxiliaryclass'
    options.compilerArgs << '-Xlint:-cast'
    options.compilerArgs << '-Xlint:-classfile'
    options.compilerArgs << '-Xlint:-deprecation'
    options.compilerArgs << '-Xlint:-dep-ann'
    options.compilerArgs << '-Xlint:-divzero'
    options.compilerArgs << '-Xlint:-empty'
    options.compilerArgs << '-Xlint:-fallthrough'
    options.compilerArgs << '-Xlint:-finally'
    options.compilerArgs << '-Xlint:-options'
    options.compilerArgs << '-Xlint:-overloads'
    options.compilerArgs << '-Xlint:-overrides'
    options.compilerArgs << '-Xlint:-path'
    options.compilerArgs << '-Xlint:-processing'
    options.compilerArgs << '-Xlint:-rawtypes'
    options.compilerArgs << '-Xlint:-serial'
    options.compilerArgs << '-Xlint:-static'
    options.compilerArgs << '-Xlint:-try'
    options.compilerArgs << '-Xlint:-unchecked'
    options.compilerArgs << '-Xlint:-varargs'
}

// compileJava.options.compilerArgs << "-Xlint:-deprecation"

// uncomment to disable 3rd party audit
// thirdPartyAudit.enabled = false

// uncomment to disable forbidden patterns checks
// forbiddenPatterns.enabled = false

// uncomment to disable license headers checks
// licenseHeaders.enabled = false
